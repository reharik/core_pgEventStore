'use strict';

var _Object$defineProperty = require('babel-runtime/core-js/object/define-property')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

_Object$defineProperty(exports, '__esModule', {
  value: true
});

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _utils = require('./utils');

var _utils2 = _interopRequireDefault(_utils);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

var _appiumLogger = require('appium-logger');

var log = (0, _appiumLogger.getLogger)('ios-tools');

var SIDE_DISK = '/Volumes/SIDE';
var SIDE_SIMS = _path2['default'].resolve(SIDE_DISK, 'sims');

function killAll() {
  var processes = arguments[0] === undefined ? ['instruments', 'simulator'] : arguments[0];

  processes = _lodash2['default'].flatten([processes]);
  var seq = (0, _lodash2['default'])(processes).map(function (p) {
    return function () {
      return _utils2['default'].exec('sudo pkill -f ' + p)['catch'](function () {});
    };
  }).value();
  return _bluebird2['default'].reduce(seq, function (_, fn) {
    return fn();
  }, null);
}

function spawnAsUser(user, cmd, args) {
  log.info('running spawnAsUser', user, cmd, args);
  return _utils2['default'].exec('ps -axj | grep loginwindow | awk "/^' + user + ' / {print \\$2;exit}"').spread(function (stdout) {
    var userPid = stdout.trim();
    return _utils2['default'].spawn('sudo', ['launchctl', 'bsexec', userPid, 'sudo', '-u'].concat([user, cmd]).concat(args), { detached: false });
  });
}

function spawnAsCurrentUser(cmd, args) {
  log.info('running spawnAsCurrentUser', cmd, args);
  return _utils2['default'].exec('whoami').spread(function (stdout) {
    var currentUser = stdout.trim();
    return spawnAsUser(currentUser, cmd, args);
  });
}

function setIosSimulatorScale() {
  log.info('setting simulator scale');
  return _utils2['default'].exec('defaults write com.apple.iphonesimulator SimulatorWindowLastScale 0.5');
}

function configureXcode(xCodeVersion) {
  log.info('configuring xCode', xCodeVersion);
  var bin = _path2['default'].resolve(SIDE_SIMS, 'configure.sh');
  return _utils2['default'].exec(bin + ' ' + xCodeVersion);
}

function resetSims() {
  log.info('resetting simulators');
  var bin = _path2['default'].resolve(SIDE_SIMS, 'reset-sims.sh');
  return _utils2['default'].exec(bin);
}

exports['default'] = {
  spawnAsUser: spawnAsUser,
  spawnAsCurrentUser: spawnAsCurrentUser,
  setIosSimulatorScale: setIosSimulatorScale,
  configureXcode: configureXcode,
  resetSims: resetSims,
  killAll: killAll
};
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,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SSxDQUFDLEdBQUcsR0FBRyxHQUFHLEdBQUcsWUFBWSxDQUFDLENBQUM7Q0FDN0M7O0FBRUQsU0FBUyxTQUFTLEdBQUk7QUFDcEIsS0FBRyxDQUFDLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO0FBQ2pDLE1BQUksR0FBRyxHQUFHLGtCQUFLLE9BQU8sQ0FBQyxTQUFTLEVBQUUsZUFBZSxDQUFDLENBQUM7QUFDbkQsU0FBTyxtQkFBTSxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7Q0FDeEI7O3FCQUVjO0FBQ2IsYUFBVyxFQUFYLFdBQVc7QUFDWCxvQkFBa0IsRUFBbEIsa0JBQWtCO0FBQ2xCLHNCQUFvQixFQUFFLG9CQUFvQjtBQUMxQyxnQkFBYyxFQUFFLGNBQWM7QUFDOUIsV0FBUyxFQUFFLFNBQVM7QUFDcEIsU0FBTyxFQUFFLE9BQU87Q0FDakIiLCJmaWxlIjoibGliL2lvcy10b29scy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xuaW1wb3J0IHV0aWxzIGZyb20gJy4vdXRpbHMnO1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcbmltcG9ydCBCIGZyb20gJ2JsdWViaXJkJztcbmltcG9ydCB7IGdldExvZ2dlciB9IGZyb20gJ2FwcGl1bS1sb2dnZXInO1xuXG5jb25zdCBsb2cgPSBnZXRMb2dnZXIoJ2lvcy10b29scycpO1xuXG5jb25zdCBTSURFX0RJU0sgPSAnL1ZvbHVtZXMvU0lERSc7XG5jb25zdCBTSURFX1NJTVMgPSBwYXRoLnJlc29sdmUoU0lERV9ESVNLLCAnc2ltcycpO1xuXG5mdW5jdGlvbiBraWxsQWxsKHByb2Nlc3Nlcz1bJ2luc3RydW1lbnRzJywgJ3NpbXVsYXRvciddKSB7XG4gIHByb2Nlc3NlcyA9IF8uZmxhdHRlbihbcHJvY2Vzc2VzXSk7XG4gIGxldCBzZXEgPSBfKHByb2Nlc3NlcykubWFwKChwKSA9PiB7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIHJldHVybiB1dGlscy5leGVjKCdzdWRvIHBraWxsIC1mICcgKyBwKS5jYXRjaCgoKSA9PiB7fSk7XG4gICAgfTtcbiAgfSkudmFsdWUoKTtcbiAgcmV0dXJuIEIucmVkdWNlKHNlcSwgZnVuY3Rpb24oXywgZm4pIHsgcmV0dXJuIGZuKCk7IH0sIG51bGwpO1xufVxuXG5mdW5jdGlvbiBzcGF3bkFzVXNlciAodXNlciwgY21kLCBhcmdzKSB7XG4gIGxvZy5pbmZvKCdydW5uaW5nIHNwYXduQXNVc2VyJywgdXNlciwgY21kLCBhcmdzKTtcbiAgcmV0dXJuIHV0aWxzLmV4ZWMoXG4gICAgXCJwcyAtYXhqIHwgZ3JlcCBsb2dpbndpbmRvdyB8IGF3ayBcXFwiL15cIiArIHVzZXIgKyBcIiAvIHtwcmludCBcXFxcJDI7ZXhpdH1cXFwiXCJcbiAgKS5zcHJlYWQoZnVuY3Rpb24gKHN0ZG91dCkge1xuICAgIHZhciB1c2VyUGlkID0gc3Rkb3V0LnRyaW0oKTtcbiAgICByZXR1cm4gdXRpbHMuc3Bhd24oXG4gICAgICBcInN1ZG9cIixcbiAgICAgIFsgJ2xhdW5jaGN0bCcsICdic2V4ZWMnLCB1c2VyUGlkLCdzdWRvJywgJy11J11cbiAgICAgICAgLmNvbmNhdChbdXNlciwgY21kXSkuY29uY2F0KGFyZ3MpLFxuICAgICAgeyBkZXRhY2hlZDogZmFsc2UgfSk7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBzcGF3bkFzQ3VycmVudFVzZXIgKGNtZCwgYXJncykge1xuICBsb2cuaW5mbygncnVubmluZyBzcGF3bkFzQ3VycmVudFVzZXInLCBjbWQsIGFyZ3MpO1xuICByZXR1cm4gdXRpbHMuZXhlYygnd2hvYW1pJykuc3ByZWFkKGZ1bmN0aW9uIChzdGRvdXQpIHtcbiAgICB2YXIgY3VycmVudFVzZXIgPSBzdGRvdXQudHJpbSgpO1xuICAgIHJldHVybiBzcGF3bkFzVXNlcihjdXJyZW50VXNlciwgY21kLCBhcmdzKTtcbiAgfSk7XG59XG5cblxuZnVuY3Rpb24gc2V0SW9zU2ltdWxhdG9yU2NhbGUoKSB7XG4gIGxvZy5pbmZvKCdzZXR0aW5nIHNpbXVsYXRvciBzY2FsZScpO1xuICByZXR1cm4gdXRpbHMuZXhlYyhcbiAgICAnZGVmYXVsdHMgd3JpdGUgY29tLmFwcGxlLmlwaG9uZXNpbXVsYXRvciBTaW11bGF0b3JXaW5kb3dMYXN0U2NhbGUgMC41J1xuICApO1xufVxuXG5mdW5jdGlvbiBjb25maWd1cmVYY29kZSAoeENvZGVWZXJzaW9uKSB7XG4gIGxvZy5pbmZvKCdjb25maWd1cmluZyB4Q29kZScsIHhDb2RlVmVyc2lvbik7XG4gIHZhciBiaW4gPSBwYXRoLnJlc29sdmUoU0lERV9TSU1TLCAnY29uZmlndXJlLnNoJyk7XG4gIHJldHVybiB1dGlscy5leGVjKGJpbiArICcgJyArIHhDb2RlVmVyc2lvbik7XG59XG5cbmZ1bmN0aW9uIHJlc2V0U2ltcyAoKSB7XG4gIGxvZy5pbmZvKCdyZXNldHRpbmcgc2ltdWxhdG9ycycpO1xuICB2YXIgYmluID0gcGF0aC5yZXNvbHZlKFNJREVfU0lNUywgJ3Jlc2V0LXNpbXMuc2gnKTtcbiAgcmV0dXJuIHV0aWxzLmV4ZWMoYmluKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQge1xuICBzcGF3bkFzVXNlcixcbiAgc3Bhd25Bc0N1cnJlbnRVc2VyLFxuICBzZXRJb3NTaW11bGF0b3JTY2FsZTogc2V0SW9zU2ltdWxhdG9yU2NhbGUsXG4gIGNvbmZpZ3VyZVhjb2RlOiBjb25maWd1cmVYY29kZSxcbiAgcmVzZXRTaW1zOiByZXNldFNpbXMsXG4gIGtpbGxBbGw6IGtpbGxBbGwsXG59O1xuIl19