'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _Promise = require('babel-runtime/core-js/promise')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _ = require('../../..');

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

require('mochawait');

require('source-map-support').install();

_chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);

describe('e2e android tools', function () {
  var _this = this;

  this.timeout(300000);
  before(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('launch emu', function callee$1$0() {
    var emu;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          emu = undefined;
          context$2$0.prev = 1;

          emu = new _.AndroidEmulator('NEXUS_S_18_X86');
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(_Promise.resolve(emu.start()));

        case 5:
          context$2$0.next = 7;
          return _regeneratorRuntime.awrap(emu.waitTillReady());

        case 7:
          context$2$0.prev = 7;

          if (emu) emu.stop();
          return context$2$0.finish(7);

        case 10:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this, [[1,, 7, 10]]);
  });

  it('killAll', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(_.androidTools.killAll());

        case 2:
          context$2$0.next = 4;
          return _regeneratorRuntime.awrap(_.androidTools.killAll('ls'));

        case 4:
          context$2$0.next = 6;
          return _regeneratorRuntime.awrap(_.androidTools.killAll(['ls', 'echo']));

        case 6:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  after(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZTJlL2FuZHJvaWQvYW5kcm9pZC10b29sLWUyZS1zcGVjcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7OztnQkFFOEMsVUFBVTs7b0JBQ3ZDLE1BQU07Ozs7OEJBQ0ksa0JBQWtCOzs7O1FBQ3RDLFdBQVc7O0FBTGxCLE9BQU8sQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDLE9BQU8sRUFBRSxDQUFDOztBQU94QyxrQkFBSyxNQUFNLEVBQUUsQ0FBQztBQUNkLGtCQUFLLEdBQUcsNkJBQWdCLENBQUM7O0FBRXpCLFFBQVEsQ0FBQyxtQkFBbUIsRUFBRSxZQUFZOzs7QUFDeEMsTUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUNyQixRQUFNLENBQUM7Ozs7Ozs7O0dBQ04sQ0FBQyxDQUFDOztBQUVILElBQUUsQ0FBQyxZQUFZLEVBQUM7UUFDVixHQUFHOzs7O0FBQUgsYUFBRzs7O0FBRUwsYUFBRyxHQUFHLE1BaEJILGVBQWUsQ0FnQlEsZ0JBQWdCLENBQUMsQ0FBQzs7MkNBQ3RDLFNBQVEsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLEVBQUUsQ0FBQzs7OzsyQ0FDNUIsR0FBRyxDQUFDLGFBQWEsRUFBRTs7Ozs7QUFFekIsY0FBSSxHQUFHLEVBQUUsR0FBRyxDQUFDLElBQUksRUFBRSxDQUFDOzs7Ozs7OztHQUV2QixDQUFDLENBQUM7O0FBRUgsSUFBRSxDQUFDLFNBQVMsRUFBQzs7Ozs7MkNBQ0wsRUF6QmdCLFlBQVksQ0F5QmYsT0FBTyxFQUFFOzs7OzJDQUN0QixFQTFCZ0IsWUFBWSxDQTBCZixPQUFPLENBQUMsSUFBSSxDQUFDOzs7OzJDQUMxQixFQTNCZ0IsWUFBWSxDQTJCZixPQUFPLENBQUMsQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLENBQUM7Ozs7Ozs7R0FDM0MsQ0FBQyxDQUFDOztBQUVILE9BQUssQ0FBQzs7Ozs7Ozs7R0FDTCxDQUFDLENBQUM7Q0FFSixDQUFDLENBQUMiLCJmaWxlIjoidGVzdC9lMmUvYW5kcm9pZC9hbmRyb2lkLXRvb2wtZTJlLXNwZWNzLmpzIiwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgnc291cmNlLW1hcC1zdXBwb3J0JykuaW5zdGFsbCgpO1xuXG5pbXBvcnQgeyBBbmRyb2lkRW11bGF0b3IsIGFuZHJvaWRUb29scyB9IGZyb20gJy4uLy4uLy4uJztcbmltcG9ydCBjaGFpIGZyb20gJ2NoYWknO1xuaW1wb3J0IGNoYWlBc1Byb21pc2VkIGZyb20gJ2NoYWktYXMtcHJvbWlzZWQnO1xuaW1wb3J0ICdtb2NoYXdhaXQnO1xuXG5jaGFpLnNob3VsZCgpO1xuY2hhaS51c2UoY2hhaUFzUHJvbWlzZWQpO1xuXG5kZXNjcmliZSgnZTJlIGFuZHJvaWQgdG9vbHMnLCBmdW5jdGlvbiAoKSB7XG4gIHRoaXMudGltZW91dCgzMDAwMDApO1xuICBiZWZvcmUoYXN5bmMgKCkgPT4ge1xuICB9KTtcblxuICBpdCgnbGF1bmNoIGVtdScsYXN5bmMgKCkgPT4ge1xuICAgIGxldCBlbXU7XG4gICAgdHJ5IHtcbiAgICAgIGVtdSA9IG5ldyBBbmRyb2lkRW11bGF0b3IoJ05FWFVTX1NfMThfWDg2Jyk7XG4gICAgICBhd2FpdCBQcm9taXNlLnJlc29sdmUoZW11LnN0YXJ0KCkpO1xuICAgICAgYXdhaXQgZW11LndhaXRUaWxsUmVhZHkoKTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgaWYgKGVtdSkgZW11LnN0b3AoKTtcbiAgICB9XG4gIH0pO1xuXG4gIGl0KCdraWxsQWxsJyxhc3luYyAoKSA9PiB7XG4gICAgYXdhaXQgYW5kcm9pZFRvb2xzLmtpbGxBbGwoKTtcbiAgICBhd2FpdCBhbmRyb2lkVG9vbHMua2lsbEFsbCgnbHMnKTtcbiAgICBhd2FpdCBhbmRyb2lkVG9vbHMua2lsbEFsbChbJ2xzJywgJ2VjaG8nXSk7XG4gIH0pO1xuXG4gIGFmdGVyKGFzeW5jICgpID0+IHtcbiAgfSk7XG5cbn0pO1xuXG4iXX0=