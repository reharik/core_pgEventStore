'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _this = this;

var _ = require('../..');

var _libUtils = require('../../lib/utils');

var _libUtils2 = _interopRequireDefault(_libUtils);

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

require('mochawait');

var _sinon = require('sinon');

var _sinon2 = _interopRequireDefault(_sinon);

require('source-map-support').install();

_chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);

describe('android tools', function () {
  before(function callee$1$0() {
    var _spawn, _exec;

    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          _spawn = _libUtils2['default'].spawn;
          _exec = _libUtils2['default'].exec;

          _sinon2['default'].stub(_libUtils2['default'], 'spawn', function () {
            return _spawn('sleep', ['300']);
          });
          _sinon2['default'].stub(_libUtils2['default'], 'exec', function () {
            return _exec('echo 1');
          });

        case 4:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('launch emu', function callee$1$0() {
    var emu;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          emu = undefined;
          context$2$0.prev = 1;

          emu = new _.AndroidEmulator('myavd', { initWait: 500 });
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(emu.start());

        case 5:
          context$2$0.next = 7;
          return _regeneratorRuntime.awrap(emu.waitTillReady());

        case 7:
          context$2$0.prev = 7;

          if (emu) emu.stop();
          return context$2$0.finish(7);

        case 10:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this, [[1,, 7, 10]]);
  });

  it('killAll', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(_.androidTools.killAll());

        case 2:
          context$2$0.next = 4;
          return _regeneratorRuntime.awrap(_.androidTools.killAll('ls'));

        case 4:
          context$2$0.next = 6;
          return _regeneratorRuntime.awrap(_.androidTools.killAll(['ls', 'echo']));

        case 6:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  after(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          _libUtils2['default'].spawn.restore();
          _libUtils2['default'].exec.restore();

        case 2:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3Qvc3BlY3MvYW5kcm9pZC10b29sLXNwZWNzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O2dCQUU4QyxPQUFPOzt3QkFDbkMsaUJBQWlCOzs7O29CQUNsQixNQUFNOzs7OzhCQUNJLGtCQUFrQjs7OztRQUN0QyxXQUFXOztxQkFDQSxPQUFPOzs7O0FBUHpCLE9BQU8sQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDLE9BQU8sRUFBRSxDQUFDOztBQVN4QyxrQkFBSyxNQUFNLEVBQUUsQ0FBQztBQUNkLGtCQUFLLEdBQUcsNkJBQWdCLENBQUM7O0FBRXpCLFFBQVEsQ0FBQyxlQUFlLEVBQUUsWUFBTTtBQUM5QixRQUFNLENBQUM7UUFDRCxNQUFNLEVBQ04sS0FBSzs7Ozs7QUFETCxnQkFBTSxHQUFHLHNCQUFNLEtBQUs7QUFDcEIsZUFBSyxHQUFHLHNCQUFNLElBQUk7O0FBRXRCLDZCQUFNLElBQUksd0JBQVEsT0FBTyxFQUFFLFlBQVk7QUFDckMsbUJBQU8sTUFBTSxDQUFDLE9BQU8sRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7V0FDakMsQ0FBQyxDQUFDO0FBQ0gsNkJBQU0sSUFBSSx3QkFBUSxNQUFNLEVBQUUsWUFBWTtBQUNwQyxtQkFBTyxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUM7V0FDeEIsQ0FBQyxDQUFDOzs7Ozs7O0dBQ0osQ0FBQyxDQUFDOztBQUVILElBQUUsQ0FBQyxZQUFZLEVBQUM7UUFDVixHQUFHOzs7O0FBQUgsYUFBRzs7O0FBRUwsYUFBRyxHQUFHLE1BMUJILGVBQWUsQ0EwQlEsT0FBTyxFQUFFLEVBQUMsUUFBUSxFQUFFLEdBQUcsRUFBQyxDQUFDLENBQUM7OzJDQUM5QyxHQUFHLENBQUMsS0FBSyxFQUFFOzs7OzJDQUNYLEdBQUcsQ0FBQyxhQUFhLEVBQUU7Ozs7O0FBRXpCLGNBQUksR0FBRyxFQUFFLEdBQUcsQ0FBQyxJQUFJLEVBQUUsQ0FBQzs7Ozs7Ozs7R0FFdkIsQ0FBQyxDQUFDOztBQUVILElBQUUsQ0FBQyxTQUFTLEVBQUM7Ozs7OzJDQUNMLEVBbkNnQixZQUFZLENBbUNmLE9BQU8sRUFBRTs7OzsyQ0FDdEIsRUFwQ2dCLFlBQVksQ0FvQ2YsT0FBTyxDQUFDLElBQUksQ0FBQzs7OzsyQ0FDMUIsRUFyQ2dCLFlBQVksQ0FxQ2YsT0FBTyxDQUFDLENBQUMsSUFBSSxFQUFFLE1BQU0sQ0FBQyxDQUFDOzs7Ozs7O0dBQzNDLENBQUMsQ0FBQzs7QUFFSCxPQUFLLENBQUM7Ozs7QUFDSixnQ0FBTSxLQUFLLENBQUMsT0FBTyxFQUFFLENBQUM7QUFDdEIsZ0NBQU0sSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDOzs7Ozs7O0dBQ3RCLENBQUMsQ0FBQztDQUVKLENBQUMsQ0FBQyIsImZpbGUiOiJ0ZXN0L3NwZWNzL2FuZHJvaWQtdG9vbC1zcGVjcy5qcyIsInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoJ3NvdXJjZS1tYXAtc3VwcG9ydCcpLmluc3RhbGwoKTtcblxuaW1wb3J0IHsgQW5kcm9pZEVtdWxhdG9yLCBhbmRyb2lkVG9vbHMgfSBmcm9tICcuLi8uLic7XG5pbXBvcnQgdXRpbHMgZnJvbSAnLi4vLi4vbGliL3V0aWxzJztcbmltcG9ydCBjaGFpIGZyb20gJ2NoYWknO1xuaW1wb3J0IGNoYWlBc1Byb21pc2VkIGZyb20gJ2NoYWktYXMtcHJvbWlzZWQnO1xuaW1wb3J0ICdtb2NoYXdhaXQnO1xuaW1wb3J0IHNpbm9uIGZyb20gJ3Npbm9uJztcblxuY2hhaS5zaG91bGQoKTtcbmNoYWkudXNlKGNoYWlBc1Byb21pc2VkKTtcblxuZGVzY3JpYmUoJ2FuZHJvaWQgdG9vbHMnLCAoKSA9PiB7XG4gIGJlZm9yZShhc3luYyAoKSA9PiB7XG4gICAgbGV0IF9zcGF3biA9IHV0aWxzLnNwYXduO1xuICAgIGxldCBfZXhlYyA9IHV0aWxzLmV4ZWM7XG5cbiAgICBzaW5vbi5zdHViKHV0aWxzLCBcInNwYXduXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBfc3Bhd24oJ3NsZWVwJywgWyczMDAnXSk7XG4gICAgfSk7XG4gICAgc2lub24uc3R1Yih1dGlscywgXCJleGVjXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBfZXhlYygnZWNobyAxJyk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIGl0KCdsYXVuY2ggZW11Jyxhc3luYyAoKSA9PiB7XG4gICAgbGV0IGVtdTtcbiAgICB0cnkge1xuICAgICAgZW11ID0gbmV3IEFuZHJvaWRFbXVsYXRvcignbXlhdmQnLCB7aW5pdFdhaXQ6IDUwMH0pO1xuICAgICAgYXdhaXQgZW11LnN0YXJ0KCk7XG4gICAgICBhd2FpdCBlbXUud2FpdFRpbGxSZWFkeSgpO1xuICAgIH0gZmluYWxseSB7XG4gICAgICBpZiAoZW11KSBlbXUuc3RvcCgpO1xuICAgIH1cbiAgfSk7XG5cbiAgaXQoJ2tpbGxBbGwnLGFzeW5jICgpID0+IHtcbiAgICBhd2FpdCBhbmRyb2lkVG9vbHMua2lsbEFsbCgpO1xuICAgIGF3YWl0IGFuZHJvaWRUb29scy5raWxsQWxsKCdscycpO1xuICAgIGF3YWl0IGFuZHJvaWRUb29scy5raWxsQWxsKFsnbHMnLCAnZWNobyddKTtcbiAgfSk7XG5cbiAgYWZ0ZXIoYXN5bmMgKCkgPT4ge1xuICAgIHV0aWxzLnNwYXduLnJlc3RvcmUoKTtcbiAgICB1dGlscy5leGVjLnJlc3RvcmUoKTtcbiAgfSk7XG5cbn0pO1xuXG4iXX0=