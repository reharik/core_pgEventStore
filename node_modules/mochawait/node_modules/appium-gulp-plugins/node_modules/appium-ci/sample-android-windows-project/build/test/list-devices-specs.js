'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _this = this;

var _ = require('../..');

var _libUtils = require('../lib/utils');

var _libUtils2 = _interopRequireDefault(_libUtils);

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

require('mochawait');

var _sinon = require('sinon');

var _sinon2 = _interopRequireDefault(_sinon);

require('source-map-support').install();

_chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);

describe('list devices', function () {
  before(function () {
    _sinon2['default'].stub(_libUtils2['default'], 'exec', function () {
      return ['List of devices attached \n' + 'emulator-5554\tdevice\n\n', null];
    });
  });
  after(function () {
    _libUtils2['default'].exec.restore();
  });
  it('should-work', function callee$1$0() {
    var res;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap((0, _.listDevices)());

        case 2:
          res = context$2$0.sent;

          res.should.have.length(1);
          res[0].should.include('emulator');

        case 5:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvbGlzdC1kZXZpY2VzLXNwZWNzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O2dCQUUwQixPQUFPOzt3QkFDZixjQUFjOzs7O29CQUNmLE1BQU07Ozs7OEJBQ0ksa0JBQWtCOzs7O1FBQ3RDLFdBQVc7O3FCQUNBLE9BQU87Ozs7QUFQekIsT0FBTyxDQUFDLG9CQUFvQixDQUFDLENBQUMsT0FBTyxFQUFFLENBQUM7O0FBU3hDLGtCQUFLLE1BQU0sRUFBRSxDQUFDO0FBQ2Qsa0JBQUssR0FBRyw2QkFBZ0IsQ0FBQzs7QUFFekIsUUFBUSxDQUFDLGNBQWMsRUFBRSxZQUFNO0FBQzdCLFFBQU0sQ0FBQyxZQUFNO0FBQ1gsdUJBQU0sSUFBSSx3QkFBUSxNQUFNLEVBQUUsWUFBTTtBQUM5QixhQUFPLENBQUMsNkJBQTZCLEdBQzlCLDJCQUEyQixFQUFFLElBQUksQ0FBQyxDQUFDO0tBQzNDLENBQUMsQ0FBQztHQUNKLENBQUMsQ0FBQztBQUNILE9BQUssQ0FBQyxZQUFNO0FBQ1YsMEJBQU0sSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO0dBQ3RCLENBQUMsQ0FBQztBQUNILElBQUUsQ0FBQyxhQUFhLEVBQUM7UUFDWCxHQUFHOzs7OzsyQ0FBUyxNQXJCWixXQUFXLEdBcUJjOzs7QUFBekIsYUFBRzs7QUFDUCxhQUFHLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDMUIsYUFBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7Ozs7Ozs7R0FDbkMsQ0FBQyxDQUFDO0NBQ0osQ0FBQyxDQUFDIiwiZmlsZSI6InRlc3QvbGlzdC1kZXZpY2VzLXNwZWNzLmpzIiwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgnc291cmNlLW1hcC1zdXBwb3J0JykuaW5zdGFsbCgpO1xuXG5pbXBvcnQge2xpc3REZXZpY2VzfSBmcm9tICcuLi8uLic7XG5pbXBvcnQgdXRpbHMgZnJvbSAnLi4vbGliL3V0aWxzJztcbmltcG9ydCBjaGFpIGZyb20gJ2NoYWknO1xuaW1wb3J0IGNoYWlBc1Byb21pc2VkIGZyb20gJ2NoYWktYXMtcHJvbWlzZWQnO1xuaW1wb3J0ICdtb2NoYXdhaXQnO1xuaW1wb3J0IHNpbm9uIGZyb20gJ3Npbm9uJztcblxuY2hhaS5zaG91bGQoKTtcbmNoYWkudXNlKGNoYWlBc1Byb21pc2VkKTtcblxuZGVzY3JpYmUoJ2xpc3QgZGV2aWNlcycsICgpID0+IHtcbiAgYmVmb3JlKCgpID0+IHtcbiAgICBzaW5vbi5zdHViKHV0aWxzLCAnZXhlYycsICgpID0+IHtcbiAgICAgIHJldHVybiBbJ0xpc3Qgb2YgZGV2aWNlcyBhdHRhY2hlZCBcXG4nICtcbiAgICAgICAgICAgICAnZW11bGF0b3ItNTU1NFxcdGRldmljZVxcblxcbicsIG51bGxdO1xuICAgIH0pO1xuICB9KTtcbiAgYWZ0ZXIoKCkgPT4ge1xuICAgIHV0aWxzLmV4ZWMucmVzdG9yZSgpO1xuICB9KTtcbiAgaXQoJ3Nob3VsZC13b3JrJyxhc3luYyAoKSA9PiB7XG4gICAgbGV0IHJlcyA9IGF3YWl0IGxpc3REZXZpY2VzKCk7XG4gICAgcmVzLnNob3VsZC5oYXZlLmxlbmd0aCgxKTtcbiAgICByZXNbMF0uc2hvdWxkLmluY2x1ZGUoJ2VtdWxhdG9yJyk7XG4gIH0pO1xufSk7XG5cbiJdfQ==