'use strict';

var _slicedToArray = require('babel-runtime/helpers/sliced-to-array')['default'];

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _Map = require('babel-runtime/core-js/map')['default'];

var _getIterator = require('babel-runtime/core-js/get-iterator')['default'];

var _this = this;

var mochawait = {},
    mochaIt = GLOBAL.it,
    mochaBefore = GLOBAL.before,
    mochaBeforeEach = GLOBAL.beforeEach,
    mochaAfter = GLOBAL.after,
    mochaAfterEach = GLOBAL.afterEach;

mochawait.it = function (desc, asyncFn) {
  mochaIt(desc, function callee$1$0(done) {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.prev = 0;
          context$2$0.next = 3;
          return _regeneratorRuntime.awrap(asyncFn());

        case 3:
          done();
          context$2$0.next = 9;
          break;

        case 6:
          context$2$0.prev = 6;
          context$2$0.t0 = context$2$0['catch'](0);

          done(context$2$0.t0);

        case 9:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this, [[0, 6]]);
  });
};

var mochaHooks = new _Map();
mochaHooks.set('before', mochaBefore);
mochaHooks.set('after', mochaAfter);
mochaHooks.set('beforeEach', mochaBeforeEach);
mochaHooks.set('afterEach', mochaAfterEach);

var _iteratorNormalCompletion = true;
var _didIteratorError = false;
var _iteratorError = undefined;

try {
  var _loop = function () {
    var _step$value = _slicedToArray(_step.value, 2);

    var name = _step$value[0];
    var hook = _step$value[1];

    GLOBAL[name] = function (asyncFn) {
      hook(function callee$2$0(done) {
        return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
          while (1) switch (context$3$0.prev = context$3$0.next) {
            case 0:
              context$3$0.prev = 0;
              context$3$0.next = 3;
              return _regeneratorRuntime.awrap(asyncFn());

            case 3:
              done();
              context$3$0.next = 9;
              break;

            case 6:
              context$3$0.prev = 6;
              context$3$0.t0 = context$3$0['catch'](0);

              done(context$3$0.t0);

            case 9:
            case 'end':
              return context$3$0.stop();
          }
        }, null, _this, [[0, 6]]);
      });
    };
  };

  for (var _iterator = _getIterator(mochaHooks), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
    _loop();
  }
} catch (err) {
  _didIteratorError = true;
  _iteratorError = err;
} finally {
  try {
    if (!_iteratorNormalCompletion && _iterator['return']) {
      _iterator['return']();
    }
  } finally {
    if (_didIteratorError) {
      throw _iteratorError;
    }
  }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9tb2NoYXdhaXQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUEsSUFBSSxTQUFTLEdBQUcsRUFBRTtJQUNkLE9BQU8sR0FBRyxNQUFNLENBQUMsRUFBRTtJQUNuQixXQUFXLEdBQUcsTUFBTSxDQUFDLE1BQU07SUFDM0IsZUFBZSxHQUFHLE1BQU0sQ0FBQyxVQUFVO0lBQ25DLFVBQVUsR0FBRyxNQUFNLENBQUMsS0FBSztJQUN6QixjQUFjLEdBQUcsTUFBTSxDQUFDLFNBQVMsQ0FBQzs7QUFFdEMsU0FBUyxDQUFDLEVBQUUsR0FBRyxVQUFDLElBQUksRUFBRSxPQUFPLEVBQUs7QUFDaEMsU0FBTyxDQUFDLElBQUksRUFBRSxvQkFBTyxJQUFJOzs7Ozs7MkNBRWYsT0FBTyxFQUFFOzs7QUFDZixjQUFJLEVBQUUsQ0FBQzs7Ozs7Ozs7QUFFUCxjQUFJLGdCQUFHLENBQUM7Ozs7Ozs7R0FFWCxDQUFDLENBQUM7Q0FDSixDQUFDOztBQUVGLElBQUksVUFBVSxHQUFHLFVBQVMsQ0FBQztBQUMzQixVQUFVLENBQUMsR0FBRyxDQUFDLFFBQVEsRUFBRSxXQUFXLENBQUMsQ0FBQztBQUN0QyxVQUFVLENBQUMsR0FBRyxDQUFDLE9BQU8sRUFBRSxVQUFVLENBQUMsQ0FBQztBQUNwQyxVQUFVLENBQUMsR0FBRyxDQUFDLFlBQVksRUFBRSxlQUFlLENBQUMsQ0FBQztBQUM5QyxVQUFVLENBQUMsR0FBRyxDQUFDLFdBQVcsRUFBRSxjQUFjLENBQUMsQ0FBQzs7Ozs7Ozs7OztRQUVsQyxJQUFJO1FBQUUsSUFBSTs7QUFDbEIsVUFBTSxDQUFDLElBQUksQ0FBQyxHQUFHLFVBQUMsT0FBTyxFQUFLO0FBQzFCLFVBQUksQ0FBQyxvQkFBTyxJQUFJOzs7Ozs7K0NBRU4sT0FBTyxFQUFFOzs7QUFDZixrQkFBSSxFQUFFLENBQUM7Ozs7Ozs7O0FBRVAsa0JBQUksZ0JBQUcsQ0FBQzs7Ozs7OztPQUVYLENBQUMsQ0FBQztLQUNKLENBQUM7OztBQVZKLG9DQUF5QixVQUFVLDRHQUFFOztHQVdwQyIsImZpbGUiOiJsaWIvbW9jaGF3YWl0LmpzIiwic291cmNlc0NvbnRlbnQiOlsibGV0IG1vY2hhd2FpdCA9IHt9XG4gICwgbW9jaGFJdCA9IEdMT0JBTC5pdFxuICAsIG1vY2hhQmVmb3JlID0gR0xPQkFMLmJlZm9yZVxuICAsIG1vY2hhQmVmb3JlRWFjaCA9IEdMT0JBTC5iZWZvcmVFYWNoXG4gICwgbW9jaGFBZnRlciA9IEdMT0JBTC5hZnRlclxuICAsIG1vY2hhQWZ0ZXJFYWNoID0gR0xPQkFMLmFmdGVyRWFjaDtcblxubW9jaGF3YWl0Lml0ID0gKGRlc2MsIGFzeW5jRm4pID0+IHtcbiAgbW9jaGFJdChkZXNjLCBhc3luYyAoZG9uZSkgPT4ge1xuICAgIHRyeSB7XG4gICAgICBhd2FpdCBhc3luY0ZuKCk7XG4gICAgICBkb25lKCk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgZG9uZShlKTtcbiAgICB9XG4gIH0pO1xufTtcblxubGV0IG1vY2hhSG9va3MgPSBuZXcgTWFwKCk7XG5tb2NoYUhvb2tzLnNldCgnYmVmb3JlJywgbW9jaGFCZWZvcmUpO1xubW9jaGFIb29rcy5zZXQoJ2FmdGVyJywgbW9jaGFBZnRlcik7XG5tb2NoYUhvb2tzLnNldCgnYmVmb3JlRWFjaCcsIG1vY2hhQmVmb3JlRWFjaCk7XG5tb2NoYUhvb2tzLnNldCgnYWZ0ZXJFYWNoJywgbW9jaGFBZnRlckVhY2gpO1xuXG5mb3IgKGxldCBbbmFtZSwgaG9va10gb2YgbW9jaGFIb29rcykge1xuICBHTE9CQUxbbmFtZV0gPSAoYXN5bmNGbikgPT4ge1xuICAgIGhvb2soYXN5bmMgKGRvbmUpID0+IHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGF3YWl0IGFzeW5jRm4oKTtcbiAgICAgICAgZG9uZSgpO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBkb25lKGUpO1xuICAgICAgfVxuICAgIH0pO1xuICB9O1xufVxuIl19